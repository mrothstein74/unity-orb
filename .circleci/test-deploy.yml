version: 2.1
orbs:
  unity: ericribeiro/unity@dev:<<pipeline.git.revision>>
  orb-tools: circleci/orb-tools@11.1

filters: &filters
  tags:
    only: /.*/

jobs:
  build:
    description: >
      Simple drop-in job to build your Unity game.

    parameters:
      step-name:
        type: string
        default: Build the project
        description: |
          Specify a custom step name for the build command, if desired.
      os:
        default: ubuntu
        description: |
          Pick the base OS for the GameCI image.
          The available options are "ubuntu" and "windows".
          More details can be found at https://game.ci/docs/docker/versions.
        type: enum
        enum: ["ubuntu", "windows"]
      target-platform:
        default: linux-il2cpp
        description: |
          Pick the target platform for the GameCI image.
          This differs from the "build-target" parameter in that it is used for the GameCI image, not Unity.
          Available options can be found at https://game.ci/docs/docker/versions.
        type: string
      editor-version:
        default: 2021.3.0f1
        description: |
          Pick the editor version for the GameCI image.
          Make sure to pick the same major version as the Unity version you generated the license for.
          Available options can be found at https://game.ci/docs/docker/versions.
        type: string
      unity-username-var-name:
        type: env_var_name
        default: "UNITY_USERNAME"
        description: |
          Enter the name of the environment variable containing your Unity username.
          This is only necessary if you have a Plus or Pro license.
      unity-password-var-name:
        type: env_var_name
        default: "UNITY_PASSWORD"
        description: |
          Enter the name of the environment variable containing your Unity password.
          This is only necessary if you have a Plus or Pro license.
      unity-serial-var-name:
        type: env_var_name
        default: "UNITY_SERIAL"
        description: |
          Enter the name of the environment variable containing your Unity serial number.
          This is only necessary if you have a Plus or Pro license.
      unity-license-var-name:
        type: env_var_name
        default: "UNITY_ENCODED_LICENSE"
        description: |
          Enter the name of the environment variable containing your Unity license file encoded in base64.
          A different license must be provided for every Unity major version.
          This is only necessary if you have a Personal license.
      project-path:
        type: string
        default: "."
        description: |
          Enter the path of your Unity project.
          This should be the directory that has an "Assets" folder inside it.
      build-target:
        type: string
        description: |
          The target platform of your build.
          Accepted arguments vary with Unity's version and can be found in the docs: https://docs.unity3d.com/2022.2/Documentation/ScriptReference/BuildTarget.html
      build-name:
        type: string
        default: "UnityBuild"
        description: |
          Enter the name for this build.
      compress:
        type: boolean
        default: true
        description: |
          Whether to compress the build output to a ".tar.gz" archive.
          This is recommended if you want to download the build artifacts from the GameCI dashboard.
          If left to "false" for decompressed WebGL builds, the built project can be run directly from the GameCI dashboard.

    docker:
      - image: 'unityci/editor:<<parameters.os>>-<<parameters.editor-version>>-<<parameters.target-platform>>-1'

    steps:
      - run:
          name: "Clone CircleCI demo repository"
          command: git clone https://github.com/EricRibeiro/Unity2D-Demo-Game-CI-CD.git
      - unity/prepare-env:
          unity-username-var-name: << parameters.unity-username-var-name >>
          unity-password-var-name: << parameters.unity-password-var-name >>
          unity-serial-var-name: << parameters.unity-serial-var-name >>
          unity-license-var-name: << parameters.unity-license-var-name >>
          project-path: <<parameters.project-path>>
      - unity/build:
          step-name: << parameters.step-name >>
          build-name: <<parameters.build-name>>
          build-target: <<parameters.build-target>>
          project-path: <<parameters.project-path>>
          compress: <<parameters.compress>>

  test:
    description: >
      Simple drop-in job to build your Unity game.

    parameters:
      step-name:
        type: string
        default: Run tests
        description: |
          Specify a custom step name for the test command, if desired.
      os:
        default: ubuntu
        description: |
          Pick the base OS for the GameCI image.
          The available options are "ubuntu" and "windows".
          More details can be found at https://game.ci/docs/docker/versions.
        type: enum
        enum: ["ubuntu", "windows"]
      target-platform:
        default: linux-il2cpp
        description: |
          Pick the target platform for the GameCI image.
          This differs from the "build-target" parameter in that it is used for the GameCI image, not Unity.
          Available options can be found at https://game.ci/docs/docker/versions.
        type: string
      editor-version:
        default: 2021.3.0f1
        description: |
          Pick the editor version for the GameCI image.
          Make sure to pick the same major version as the Unity version you generated the license for.
          Available options can be found at https://game.ci/docs/docker/versions.
        type: string
      unity-username-var-name:
        type: env_var_name
        default: "UNITY_USERNAME"
        description: |
          Enter the name of the environment variable containing your Unity username.
          This is only necessary if you have a Plus or Pro license.
      unity-password-var-name:
        type: env_var_name
        default: "UNITY_PASSWORD"
        description: |
          Enter the name of the environment variable containing your Unity password.
          This is only necessary if you have a Plus or Pro license.
      unity-serial-var-name:
        type: env_var_name
        default: "UNITY_SERIAL"
        description: |
          Enter the name of the environment variable containing your Unity serial number.
          This is only necessary if you have a Plus or Pro license.
      unity-license-var-name:
        type: env_var_name
        default: "UNITY_ENCODED_LICENSE"
        description: |
          Enter the name of the environment variable containing your Unity license file encoded in base64.
          A different license must be provided for every Unity major version.
          This is only necessary if you have a Personal license.
      project-path:
        type: string
        default: "."
        description: |
          Enter the path of your Unity project.
          This should be the directory that has an "Assets" folder inside it.
      test-platform:
        type: string
        default: "editmode"
        description: |
          Specify the test platform to run tests on.
          Valid values are "editmode", "playmode" and Unity's target builds.
          More information can be found on: https://docs.unity3d.com/Packages/com.unity.test-framework@2.0/manual/reference-command-line.html

    # docker:
    #   - image: 'unityci/editor:<<parameters.os>>-<<parameters.editor-version>>-<<parameters.target-platform>>-1'
    machine:
      image: windows-server-2019-cuda:current
      resource_class: windows.gpu.nvidia.medium
      shell: bash.exe

    steps:
      - run:
          name: "Clone CircleCI demo repository"
          command: git clone https://github.com/EricRibeiro/Unity2D-Demo-Game-CI-CD.git
      - unity/prepare-env:
          unity-username-var-name: << parameters.unity-username-var-name >>
          unity-password-var-name: << parameters.unity-password-var-name >>
          unity-serial-var-name: << parameters.unity-serial-var-name >>
          unity-license-var-name: << parameters.unity-license-var-name >>
          project-path: <<parameters.project-path>>
      - unity/test:
          step-name: << parameters.step-name >>
          test-platform: << parameters.test-platform >>
          project-path: << parameters.project-path >>

workflows:
  test-build:
    jobs:
      - test:
          name: "test"
          step-name: "Check if the tests run and results are uploaded"
          unity-license-var-name: "UNITY_ENCODED_LICENSE_2021"
          os: "ubuntu"
          target-platform: "linux-il2cpp"
          editor-version: "2021.3.0f1"
          project-path: "Unity2D-Demo-Game-CI-CD/src"
          test-platform: "playmode"
          filters: *filters
          context: orb-testing-unity
      # - build:
      #     name: "build-linux64"
      #     step-name: "Build StandaloneLinux64"
      #     unity-license-var-name: "ACTIVATION_ULF_ENC"
      #     os: "ubuntu"
      #     target-platform: "linux-il2cpp"
      #     editor-version: "2021.3.0f1"
      #     project-path: "Unity2D-Demo-Game-CI-CD/src"
      #     build-target: StandaloneLinux64
      #     compress: true
      #     requires:
      #       - test
      #     filters: *filters
      #     context: orb-unity-testing
      # - build:
      #     name: "build-webgl"
      #     step-name: "Build WebGL"
      #     unity-license-var-name: "ACTIVATION_ULF_ENC"
      #     os: "ubuntu"
      #     target-platform: "webgl"
      #     editor-version: "2021.3.0f1"
      #     project-path: "Unity2D-Demo-Game-CI-CD/src"
      #     build-target: "WebGL"
      #     compress: false
      #     requires:
      #       - test
      #     filters: *filters
      #     context: orb-unity-testing
      # - build:
      #     name: "build-windows64"
      #     step-name: "Build StandaloneWindows64"
      #     unity-license-var-name: "ACTIVATION_ULF_ENC"
      #     os: "ubuntu"
      #     target-platform: "windows-mono"
      #     editor-version: "2021.3.0f1"
      #     project-path: "Unity2D-Demo-Game-CI-CD/src"
      #     build-target: "StandaloneWindows64"
      #     requires:
      #       - test
      #     filters: *filters
      #     context: orb-unity-testing
      - orb-tools/pack:
          filters: *filters
      - orb-tools/publish:
          orb-name: ericribeiro/unity
          vcs-type: << pipeline.project.type >>
          pub-type: production
          requires:
            - orb-tools/pack
            - test
            # - build-linux64
            # - build-webgl
            # - build-windows64
          context: orb-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/